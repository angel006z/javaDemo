<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${package.Dao}.${table.daoName}">

    <resultMap id="myResultMap"
               type="${package.Info}.${po}">
        <id property="roleId" column="role_id"></id>
        <result property="roleCode" column="role_code"></result>
        <result property="roleName" column="role_name"></result>
        <result property="createDate" column="create_date"></result>
        <result property="createUserId" column="create_user_id"></result>
        <result property="createUser" column="create_user"></result>
        <result property="updateDate" column="update_date"></result>
        <result property="updateUserId" column="update_user_id"></result>
        <result property="updateUser" column="update_user"></result>
        <result property="isValid" column="is_valid"></result>
        <result property="remark" column="remark"></result>
    </resultMap>

    <select id="getObjectById" parameterType="java.lang.String"
            resultMap="myResultMap">
		select
		role_id,role_code,role_name,create_date,create_user_id,create_user,update_date,update_user_id,update_user,is_valid,remark
		from tb_role where role_id=#{id}
	</select>

    <select id="getListPage"  parameterType="${package.Dto}.${table.baseName}ListDto"
            resultMap="myResultMap">
        select
        role_id,role_code,role_name,create_date,create_user_id,create_user,update_date,update_user_id,update_user,is_valid,remark
        from tb_role
        where is_valid=1
        <if test="roleCode != null and roleCode!=''">
            AND role_code like "%"#{roleCode}"%"
        </if>
        <if test="roleCode != null and roleCode!=''">
            AND role_name like "%"#{roleName}"%"
        </if>
        LIMIT
        #{pagination.pageIndex},#{pagination.pageSize}
    </select>

    <select id="getTotalRecord" parameterType="${package.Dto}.${table.baseName}ListDto" resultType="java.lang.Long">
        select count(*) from tb_role where is_valid=1
        <if test="roleCode != null and roleCode!=''">
            AND role_code like "%"#{roleCode}"%"
        </if>
        <if test="roleCode != null and roleCode!=''">
            AND role_name like "%"#{roleName}"%"
        </if>
    </select>

    <select id="getListByAll" resultMap="myResultMap">
		select
		role_id,role_code,role_name,create_date,create_user_id,create_user,update_date,update_user_id,update_user,is_valid,remark
		from tb_role
	</select>


    <select id="getListByValid" resultMap="myResultMap">
		select
		role_id,role_code,role_name,create_date,create_user_id,create_user,update_date,update_user_id,update_user,is_valid,remark
		from tb_role where is_valid=1
	</select>


    <insert id="save"	parameterType="${package.Info}.${po}">
		insert into tb_role (role_id,role_code,role_name,create_date,create_user_id,create_user,update_date,update_user_id,update_user,is_valid,remark) values
		(#{roleId},#{roleCode},#{roleName},#{createDate},#{createUserId},#{createUser},#{updateDate},#{updateUserId},#{updateUser},#{isValid},#{remark})
	</insert>

    <update id="update" parameterType="${package.Info}.${po}">
        update tb_role
        <set>
            <if test="roleCode!=null">
                role_code=#{roleCode},
            </if>
            <if test="roleName!=null">
                role_name=#{roleName},
            </if>
            <if test="createDate!=null">
                create_date=#{createDate},
            </if>
            <if test="createUserId!=null">
                create_user_id=#{createUserId},
            </if>
            <if test="remark!=null">
                remark=#{remark}
            </if>
        </set>
        where role_id=#{roleId}
    </update>

    <update id="logicDelete" parameterType="com.meida.dto.DeleteDto">
        update tb_role set is_valid=-1,update_user_id=#{currentUserDto.userId},update_user=#{currentUserDto.realName} where role_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="enable" parameterType="com.meida.dto.EnableDto">
        update tb_role set is_valid=1,update_user_id=#{currentUserDto.userId},update_user=#{currentUserDto.realName} where role_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="disable" parameterType="com.meida.dto.DisableDto">
        update tb_role set is_valid=-2,update_user_id=#{currentUserDto.userId},update_user=#{currentUserDto.realName} where role_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <delete id="physicalDelete" parameterType="java.lang.String">
        delete from tb_role where role_id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>