<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.meida.backend.basic.dao.inter.IAuthRoleNodeDao">

	<resultMap id="myResultMap"
		type="com.meida.backend.basic.po.AuthRoleNode">
		<id property="authRoleNodeId" column="authRoleNodeId"></id>
		<result property="nodeId" column="nodeId"></result>
		<result property="roleId" column="roleId"></result>
		<result property="operateDate" column="operateDate"></result>
	</resultMap>


	<select id="getObjectById" parameterType="java.lang.String"
		resultMap="myResultMap">
		select
		authRoleNodeId,nodeId,roleId,operateDate
		from tbAuthRoleNode where authRoleNodeId=#{id}
	</select>

	<select id="getListByAll" resultMap="myResultMap">
		select
		authRoleNodeId,nodeId,roleId,operateDate
		from tbAuthRoleNode
	</select>


	<select id="getListByValid" resultMap="myResultMap">
		select
		authRoleNodeId,nodeId,roleId,operateDate
			from tbAuthRoleNode where isValid=1
	</select>

	<select id="getListByPage"
		parameterType="com.meida.backend.basic.po.AuthRoleNode"
		resultMap="myResultMap">
		select
		authRoleNodeId,nodeId,roleId,operateDate		from tbAuthRoleNode
		where isValid=1
				
		LIMIT
		#{pagination.pageIndex},#{pagination.pageSize}
	</select>


	<select id="getTotalRecord"
            parameterType="com.meida.backend.basic.po.AuthRoleNode" resultType="java.lang.Long">
		select count(*) from tbAuthRoleNode
		where isValid=1		
		LIMIT
		#{pagination.pageIndex},#{pagination.pageSize}
	</select>


	<insert id="save"
		parameterType="com.meida.backend.basic.po.AuthRoleNode">
		insert into tbAuthRoleNode (authRoleNodeId,nodeId,roleId,operateDate) values 
		(#{authRoleNodeId},#{nodeId},#{roleId},#{operateDate})
	</insert>


	<update id="update"
		parameterType="com.meida.backend.basic.po.AuthRoleNode">
		update tbAuthRoleNode
		<set>
			<if test="nodeId!=null">
				nodeId=#{nodeId},
			</if>
			<if test="roleId!=null">
				roleId=#{roleId},
			</if>
			<if test="operateDate!=null">
				operateDate=#{operateDate}
			</if>		
			
		</set>
		where authRoleNodeId=#{authRoleNodeId}
	</update>


	<delete id="deletePhysicalById" parameterType="java.lang.String">
		delete from tbAuthRoleNode
		where authRoleNodeId=#{id}
	</delete>


	<delete id="deleteLogicById" parameterType="java.lang.String">
		update tbAuthRoleNode set
		isValid=-1 where authRoleNodeId=#{id}
	</delete>

</mapper>